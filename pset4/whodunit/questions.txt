/* 
Problem Set 4 - Questions & Answers

Author: Adrian Arumugam
Date: 2016-01-09
*/

1. What’s stdint.h?
A: stdint.h is a header file in the C standard library that defines fixed-width integer types, together with
minimum and maximum allowable values for each type.

2. What’s the point of using uint8_t, uint32_t, int32_t, and uint16_t in a program?
A: When you want to be sure of the size of the data type. This allows you to write portable code
as there are no variables introduced by the compiler or OS used etc. The size is fixed.

3. How many bytes is a BYTE, a DWORD, a LONG, and a WORD, respectively?
A: BYTE = 8 bits( 1 byte), DWORD = 32 bits(4 bytes), LONG = 32 bits(4 bytes), WORD = 16 bits(2 bytes)

4. What (in ASCII, decimal, or hexadecimal) must the first two bytes of any BMP file be? Leading bytes used to identify file formats
(with high probability) are generally called "magic numbers."
A: In ASCII 'BM', In Hexadecimal this is 0x4d42(Little Endian) or 0x424d(Big Endian).

5. What’s the difference between bfSize and biSize?
A: bfSize is in the BITMAPFILEHEADER structure and it defines the size, in bytes, of the bitmap file itself. 
Whilst biSize is in the BITMAPINFOHEADER structure and it defines the number of bytes required by the BITMAPINFOHEADER structure
only.

6. What does it mean if biHeight is negative?
A: biHeight represents the height of the bitmap in pixels. If biHeight is negative, the bitmap is a top-down DIB(device-independent
bitmap) and its origin is the upper-left corner.

An additional item of note is that if biHeight is negative, indicating a top-down DIB, biCompression must be either BI_RGB or 
BI_BITFIELDS as Top-down DIBs cannot be compressed.

7. What field in BITMAPINFOHEADER specifies the BMP’s color depth (i.e., bits per pixel)?
A: The biBitCount field. The valid values are 0, 1, 4, 8, 16, 24, 32.

8. Why might fopen return NULL in lines 24 and 32 of copy.c?
A: NULL will be returned if the fopen call fails to read from (open a file) or write to(create a file) the disk successfully.

9. Why is the third argument to fread always 1 in our code?
A: The third argument indicates the number of data elements fread should read. By default when a read is successful fread() returns 
the number of items read. This returned number equals the number of bytes transferred only when this third argument(size) is equal 
to 1.

10. What value does line 65 of copy.c assign to padding if bi.biWidth is 3?
A: 3

11. What does fseek do?
A: fseek sets the file position indicator for the given file(stream). The new file position(in bytes) is determined by adding the 
offset bytes provided by the second argument to the position specified by the third argument(whence).

int fseek(FILE * stream, long offset, int whence)

12. What is SEEK_CUR?
A: This is one of the special 'whence' arguments for fseek. It can be SEEK_SET, SEEK_CUR or SEEK_END. SEEK_CUR defines that the 
offset is relative to the current file position indicator.
